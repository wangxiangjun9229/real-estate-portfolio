{"version":3,"file":"proxy-B2gckVo1.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","PresenceContext","MotionConfigContext","p","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","noop","any","invariant","memo","callback","result","progress","from","to","value","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","createRenderStep","runNextFrame","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","keepAlive","immediate","queue","frameData","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","key","read","resolveKeyframes","update","preRender","render","postRender","processBatch","timestamp","wake","process","i","frame","cancelFrame","frameSteps","LazyContext","featureProps","featureDefinitions","props","name","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","createDOMMotionComponentProxy","componentFactory","componentCache","deprecatedFactoryFunction","args","_target","MotionContext","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","microtask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_a","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","jsx","ForwardRefMotionComponent","forwardRef","layoutGroupId","combined","lowercaseSVGElements","isSVGComponent","getValueState","resolveVariantFromProps","definition","custom","current","velocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","makeState","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","index","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","clamp","min","max","number","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","transformValueTypes","int","numberValueTypes","translateAlias","numTransforms","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","style","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","keys","pathLength","pathSpacing","calcOrigin","origin","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createHtmlRenderState","createSvgRenderState","tag","renderHTML","element","styleProp","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scaleCorrectors","addScaleCorrector","correctors","isForcedMotionValue","prevProps","newValues","scrapeMotionValuesFromProps$1","targetKey","updateSVGDimensions","layoutProps","svgMotionConfig","needsMeasure","htmlMotionConfig","copyRawValuesOnly","source","useInitialMotionValues","useStyle","useHTMLProps","htmlProps","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","supportsScrollTimeline","BaseGroupPlaybackControls","animations","animation","propName","newValue","timeline","fallback","subscriptions","cancel","time","speed","methodName","controls","GroupPlaybackControls","onResolve","onReject","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","duration","timeStep","isGenerator","attachTimeline","isBezierDefinition","easing","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","a","b","c","d","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","root","elements","setupGesture","options","gestureAbortController","eventOptions","filterEvents","event","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","child","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","onPressStart","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","cancelEvent","setDragLock","axis","positionalKeys","now","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","numSubscriptions","velocityPerSecond","frameDuration","MAX_VELOCITY_DELTA","isFloat","MotionValue","currentTime","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","delta","endAnimation","startAnimation","resolve","motionValue","setMotionValue","setTarget","isWillChangeMotionValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isZeroValueString","isNone","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","unresolvedKeyframes","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","onComplete","isAsync","currentValue","finalKeyframe","valueAsRead","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","token1","token2","getVariableValue","depth","trimmed","testValueType","auto","dimensionValueTypes","findDimensionValueType","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","hasKeyframesChanged","keyframes","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","MAX_RESOLVE_DELAY","BaseAnimation","autoplay","delay","repeatDelay","resolvedAnimation","reject","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","visualDuration","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","ease","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","percentToProgress","MainThreadAnimation","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","startTime","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","supportsWaapi","sampleDelta","maxDuration","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","unsupportedEasingFunctions","isUnsupportedEase","AcceleratedAnimation","pregeneratedAnimation","sampleTime","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","node","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","addPointerInfo","addPointerEvent","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","info","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","getContextWindow","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","animateSingleValue","motionValue$1","isSVGElement","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","metrics","isDebug","transformAxes","hiddenVisibility","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","valueTypes","findValueType","visualElementStore","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","DOMVisualElement","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","createMotionComponent","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241]}